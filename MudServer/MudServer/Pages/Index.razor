@page "/"
@inject IDialogService Dialog
<PageTitle>Index</PageTitle>

<h1>@Title</h1>



<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="OnButtonClicked" >Delete</MudButton>

<MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="OnButtonClicked2" >Delete 2</MudButton>

<MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="OnButtonClicked3" >Delete 3</MudButton>

<MudChip>@state</MudChip>





<MudButton OnClick="@((e) => OpenDialog(disableBackdropClick))" Color="Color.Tertiary">Disable backdrop dialog</MudButton>
@code {
    [Inject] private IDialogService DialogService { get; set; }

    DialogOptions disableBackdropClick = new DialogOptions() { DisableBackdropClick = true };

    public string Title { get; set; } = "";

    private async Task OpenDialog(DialogOptions options)
    {
        var result = Dialog.Show<Dialog>("Custom Options Dialog", options);

        var a =await result.GetReturnValueAsync<object>();

        if (a != null)
        {
            if ((bool)a == true)
            {
                Title = "Premuto Ok";
            }
            else
            {
                Title = "Annullato";
            }
        }
        else
        {
            Title = "Fuori";
        }
    }



    string state = "Message box hasn't been opened yet";


    private async void OnButtonClicked()
    {
        bool? result = await DialogService.ShowMessageBox(
            "Warning", 
            "Deleting can not be undone!", 
            yesText:"Delete!", cancelText:"Cancel");
        state= result==null ? "Cancelled" : "Deleted!";
        StateHasChanged();
    }

    private async void OnButtonClicked2()
    {
        bool? result = (await Helpers.Mudary.ConfirmDelete(DialogService));
        if (result == null || result == false)
        {
            state =  "Cancelled";
            
        }
        else
        {
            state =  "Deleted!";
        }
        StateHasChanged();
    }

    private async void OnButtonClicked3()
    {
        bool? result = (await Helpers.Mudary.ConfirmDelete2(DialogService));
        if (result == null || result == false)
        {
            state =  "Cancelled";
            
        }
        else
        {
            state =  "Deleted!";
        }
        StateHasChanged();
    }

}
